/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/Rooster.glb -t --types --keepnames --shadows -o ./app/components/models/Rooster.tsx
*/

import type * as THREE from 'three';
import type { GLTF } from 'three-stdlib';
import { useGLTF } from '@react-three/drei';
import React from 'react';

type GLTFResult = GLTF & {
  nodes: {
    Rooster_mesh: THREE.Mesh;
  };
  materials: {
    Rooster_mat: THREE.MeshStandardMaterial;
  };
  animations: GLTFAction[];
};

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/Rooster.glb') as GLTFResult;

  if (!nodes)
    return null;

  return (
    <group {...props} dispose={null}>
      <mesh name="Rooster_mesh" castShadow receiveShadow geometry={nodes.Rooster_mesh.geometry} material={materials.Rooster_mat} />
    </group>
  );
}

useGLTF.preload('/Rooster.glb');
